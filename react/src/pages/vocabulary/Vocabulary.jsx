import { useEffect, useState } from 'react';
import './Vocabulary.module.scss';

function Vocabulary() {
    const [words, setWords] = useState([]);
    const [editingRow, setEditingRow] = useState(null); // ID —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏
    const [editValues, setEditValues] = useState({}); // –ó–Ω–∞—á–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
    useEffect(() => {
        fetch('http://itgirlschool.justmakeit.ru/api/words')
            .then(response => response.json())
            .then(data => setWords(data))
            .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–æ–≤:', error));
    }, []);

    // –í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const handleEditClick = (id, word) => {
        setEditingRow(id);
        setEditValues(word); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ –ø–æ–ª—è
    };

    // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const handleCancelClick = () => {
        setEditingRow(null);
        setEditValues({});
    };

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ
    const handleChange = (e, field) => {
        setEditValues({ ...editValues, [field]: e.target.value });
    };

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const handleSaveClick = (id) => {
        const updatedWords = words.map(word =>
            word.id === id ? { ...word, ...editValues } : word
        );
        setWords(updatedWords);
        setEditingRow(null);
    };

    return (
        <div className="vacabulary">
            <h2>–°–ª–æ–≤–∞—Ä—å —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã EnFLame</h2>
            <table className='table'>
                <thead>
                    <tr>
                        <th>English / –ê–Ω–≥–ª–∏–π—Å–∫–∏–π</th>
                        <th>Transcription / –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è</th>
                        <th>Russian / –†—É—Å—Å–∫–∏–π</th>
                        <th>Tags / –ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                        <th>Edit / –ò—Å–ø—Ä–∞–≤–∏—Ç—å</th>
                        <th>Delete / –£–¥–∞–ª–∏—Ç—å</th>
                    </tr>
                </thead>
                <tbody>
                    {words.map(word => (
                        <tr key={word.id}>
                            {editingRow === word.id ? (
                                <>
                                    <td><input type="text" value={editValues.english} onChange={(e) => handleChange(e, 'english')} /></td>
                                    <td><input type="text" value={editValues.transcription} onChange={(e) => handleChange(e, 'transcription')} /></td>
                                    <td><input type="text" value={editValues.russian} onChange={(e) => handleChange(e, 'russian')} /></td>
                                    <td><input type="text" value={editValues.tags} onChange={(e) => handleChange(e, 'tags')} /></td>
                                    <td>
                                        <button onClick={() => handleSaveClick(word.id)}>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                                        <button onClick={handleCancelClick}>‚ùå –û—Ç–º–µ–Ω–∞</button>
                                    </td>
                                </>
                            ) : (
                                <>
                                    <td>{word.english}</td>
                                    <td>{word.transcription}</td>
                                    <td>{word.russian}</td>
                                    <td>{word.tags}</td>
                                    <td>
                                        <button onClick={() => handleEditClick(word.id, word)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                                    </td>
                                    <td>
                                        <button>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                                    </td>
                                </>
                            )}
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
}

export default Vocabulary;